{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xis","stepNumber","step","setState","slice","length","calculateWinner","concat","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAIA,SAASA,EAAOC,GAEZ,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAKTC,E,kKAEJ,SAAaC,GAAI,IAAD,OACd,OAAQ,cAACN,EAAD,CACNI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAI,EAAKF,MAAME,QAAQG,Q,oBAKpC,WAEE,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA3BTC,IAAMC,WAkCpBC,E,kDACJ,WAAYX,GAAO,IAAD,8BAChB,cAAMA,IACDY,MAAO,CACVC,QAAQ,CAAC,CACPN,QAASO,MAAM,GAAGC,KAAK,QAEzBC,KAAK,EACLC,WAAW,GAPG,E,0CAWlB,SAAOC,GACLZ,KAAKa,SAAS,CACZF,WAAaC,EACbF,IAAOE,EAAK,IAAK,M,yBAIrB,SAAYb,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQO,MAAM,EAAEd,KAAKM,MAAMK,WAAW,GAE3DV,EADUM,EAAQA,EAAQQ,OAAS,GACjBd,QAAQa,QAC5BE,EAAgBf,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMI,IAAM,IAAM,IACpCV,KAAKa,SACH,CAACN,QAASA,EAAQU,OAAO,CAAC,CACxBhB,QAASA,KAETS,KAAOV,KAAKM,MAAMI,IAClBC,WAAYJ,EAAQQ,Y,oBAI1B,WAAU,IAYJG,EAZG,OACDX,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMK,YAC7BS,EAASJ,EAAgBG,EAAQlB,SAEjCoB,EAAQd,EAAQe,KAAI,SAACV,EAAKW,GAC9B,IAAMC,EAAOD,EAAO,SAAWA,EAAM,mBACrC,OAAQ,6BACJ,wBAAQ3B,QAAS,kBAAM,EAAK6B,OAAOF,IAAnC,SAA2CC,KAD9BD,MAWnB,OAJEL,EADEE,EACO,WAAaA,EAEb,iBAAmBpB,KAAKM,MAAMI,IAAM,IAAM,KAGnD,sBAAKf,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CAAOG,QAASkB,EAAQlB,QACtBL,QAAW,SAACG,GAAD,OAAK,EAAK2B,YAAY3B,QAGrC,sBAAKJ,UAAU,YAAf,UACE,8BAAMuB,IACN,6BAAKG,c,GA/DIlB,IAAMC,WAqEzB,SAASY,EAAgBf,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA5B,EAAI,EAAGA,EAAI4B,EAAMZ,OAAQhB,IAAK,CAAC,IAAD,cACnB4B,EAAM5B,GADa,GAC9B6B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAKTG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.b9d731e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props){\r\n\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    return (<Square \r\n      value={this.props.squares[i]}\r\n      onClick={()=>this.props.onClick(i)}\r\n     />\r\n     );\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      history:[{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      xis: true,\r\n      stepNumber:0,\r\n    };\r\n  }\r\n\r\n  jumpTo(step){\r\n    this.setState({\r\n      stepNumber : step,\r\n      xis : (step%2)===0,\r\n    });\r\n  }\r\n\r\n  handleClick(i){\r\n    const history = this.state.history.slice(0,this.state.stepNumber+1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xis ? 'x' : 'o';\r\n    this.setState(\r\n      {history: history.concat([{\r\n        squares: squares,\r\n      }]),\r\n        xis : !this.state.xis,\r\n        stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    \r\n    const moves = history.map((step,move)=>{\r\n      const desc = move ? 'go to ' + move :'go to game start';\r\n      return( <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>);\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xis ? 'X' : 'O');\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board squares={current.squares}\r\n            onClick = {(i)=>this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}